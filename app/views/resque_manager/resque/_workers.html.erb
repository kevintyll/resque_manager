<% if params[:id] && worker = find_worker(params[:id]) %>

    <h1>Worker <%= worker %></h1>
    <table class='workers'>
      <tr>
        <th>&nbsp;</th>
        <th>Host</th>
        <th>Path</th>
        <th>Pid</th>
        <th>Thread</th>
        <th>Started</th>
        <th>Paused</th>
        <th>Queues</th>
        <th>Processed</th>
        <th>Failed</th>
        <th>Processing</th>
      </tr>
      <tr>
        <td class='icon'>
          <img src="<%= "/assets/resque_manager/#{state = worker.state}" %>.png" alt="<%= state %>" title="<%= state %>">
        </td>

        <% host, pid, thread, path, queues = worker.to_s.split(':') %>
        <td><%= host %></td>
        <td><%= path %></td>
        <td><%= pid %></td>
        <td><%= thread %></td>
        <td><span class="time"><%= format_time(Time.zone.parse(worker.started)) %></span></td>
        <td>
          <% if worker.paused? %>
              <span class="time"><%= format_time(Time.zone.parse(worker.paused)) %></span>
        <% else %>
              <span>Not Paused</span>
        <% end %>
        </td>
        <td class='queues'><%= queues.split(',').map { |q| link_to(q, queues_resque_path(id: q), :class => 'queue-tag') }.join('').html_safe %></td>
        <td><%= worker.processed %></td>
        <td><%= worker.failed %></td>
        <td class='process'>
          <% data = worker.processing || {} %>
          <% if data['queue'] %>
              <code><%= data['payload']['class'] %></code>
              <small><%= link_to(format_time(Time.zone.parse(data['run_at'])), working_resque_path(id: worker.to_s.gsub(/\./, '_')), :class => "queue time") %></small>
              <br>
              <small><%= worker.overview_message %></small>
          <% else %>
              <span class='waiting'>Waiting for a job...</span>
          <% end %>
        </td>
      </tr>
    </table>

<% elsif params[:id] %>

    <h1>Worker doesn't exist</h1>

<% else %>

    <h1 class='wi'><%= pluralize resque.workers.size, 'Worker' %></h1>
    <p class='intro'>The workers listed below are all registered as active on your system.</p>
    <table class='workers'>
      <tr>
        <th>&nbsp;</th>
        <th>Where (ip):pid:thread:path</th>
        <th>Queues</th>
        <th>Processing</th>
        <th>&nbsp;</th>
      </tr>
      <% upid = '' %>
      <% for worker in (workers = resque.workers.sort_by { |w| w.to_s }) %>
          <tr class="<%= state = worker.state %>">
            <td class='icon'>
              <img src="<%="/assets/resque_manager/#{state}" %>.png" alt="<%= state %>" title="<%= state %>"></td>

            <% host, pid, thread, path, queues = worker.to_s.split(':') %>
            <td class='where'><%= link_to("#{host}:#{pid}:#{thread}:#{path}", workers_resque_path(id: worker.to_s.gsub(/\./, '_'))) %></td>
            <td class='queues'><%= queues.split(',').map { |q| link_to(q, queues_resque_path(id: q), :class => 'queue-tag') }.join('').html_safe %></td>

            <td class='process'>
              <% data = worker.processing || {} %>
              <% if data['queue'] %>
                  <code><%= data['payload']['class'] %></code>
                  <small><%= link_to(format_time(Time.zone.parse(data['run_at'])), working_resque_path(id: worker.to_s.gsub(/\./, '_')), :class => "queue time") %></small>
                  <br/>
                  <small><%= worker.overview_message %></small>
              <% else %>
                  <span class='waiting'>Waiting for a job...</span>
              <% end %>
            </td>
            <td>
              <% if upid != pid %>
                  <%= button_to "Stop", stop_worker_resque_path(worker: worker.to_s), :class => 'clear-failed', method: :delete, :title => "This will stop all workers on #{host} in pid #{pid}: #{worker.workers_in_pid.collect { |w| w.to_s }.join(', ')}" %>
                  <% if worker.paused? %>
                      <%= button_to "Unpause", continue_worker_resque_path(worker: worker.to_s), :class => 'clear-failed', method: :put, :title => "This will unpause all workers on #{host} in pid #{pid}: #{worker.workers_in_pid.collect { |w| w.to_s }.join(', ')}" %>
                  <% else %>
                      <%= button_to "Pause", pause_worker_resque_path(worker: worker.to_s), :class => 'clear-failed', method: :put, :title => "This will pause all workers on #{host} in pid #{pid}: #{worker.workers_in_pid.collect { |w| w.to_s }.join(', ')}" %>
                  <% end %>
                  <%= button_to "Restart", restart_worker_resque_path(worker: worker.to_s), :class => 'clear-failed', method: :put, :title => "This will restart all workers on #{host} in pid #{pid}: #{worker.workers_in_pid.collect { |w| w.to_s }.join(', ')}" %>
                  <% upid = pid %>
              <% end %>
            </td>
          </tr>
      <% end %>
      <% if workers.empty? %>
          <tr>
            <td colspan='5' class='no-data'>There are no registered workers</td>
          </tr>
      <% end %>
    </table>
    <%= poll %>
    <br/>
    <hr/>
    <h1 class='wi'>Start New Workers</h1>
    <%= form_tag :action => 'start_worker' do -%>
        <ul class='new_worker'>
          <li>
            <dl>
              <dt>Queue(s)</dt>
              <dd><%= text_field_tag :queues, nil, :size => 125 %>
                <br/> Prefix each worker with a '#', comma separate the list of queues you want each worker to monitor.
                No Spaces. #queue1,queue2#queue3#queue2 will produce 3 workers in 3 threads.
              </dd>
              <dt>Host(s)/IP(s)</dt>
              <dd><%= text_field_tag :hosts, nil, :size => 125 %>
                <br/> Comma separate the IP address of the servers where you want your worker to run.
              </dd>
              <% if ResqueManager.applications.present? %>
                  <dt>Application</dt>
                  <dd><%= select_tag :application_path, options_for_select(ResqueManager.applications.to_a), :include_blank => true %>
                    <br/> The application where the workers are if not in the same application as the UI.
                  </dd>
              <% end %>
              <dt><%= submit_tag "Start", :id => "submit" %></dt>
            </dl>
          </li>
        </ul>
    <% end -%>
<% end %>
